<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsrdxzw.mapper.OrdersMapperCustom">

    <resultMap id="myOrdersVO" type="com.jsrdxzw.vo.MyOrdersVO">
        <id column="orderId" property="orderId"/>
        <result column="createdTime" property="createdTime"/>
        <result column="payMethod" property="payMethod"/>
        <result column="realPayAmount" property="realPayAmount"/>
        <result column="postAmount" property="postAmount"/>
        <result column="orderStatus" property="orderStatus"/>
        <result column="isComment" property="isComment"/>

        <!--由于pageHelper分页不支持这个集合映射，这里需要二次查询-->
        <!--https://github.com/pagehelper/Mybatis-PageHelper/blob/master/wikis/zh/Important.md-->
        <!--获取子订单 column作为参数传递-->
        <collection property="subOrderItemList" ofType="com.jsrdxzw.vo.MySubOrdersItemVO" column="orderId"
                    select="getSubItems">
            <result column="itemId" property="itemId"/>
            <result column="itemName" property="itemName"/>
            <result column="itemImg" property="itemImg"/>
            <result column="itemSpecId" property="itemSpecId"/>
            <result column="itemSpecName" property="itemSpecName"/>
            <result column="buyCounts" property="buyCounts"/>
            <result column="price" property="price"/>
        </collection>
    </resultMap>

    <select id="getSubItems" parameterType="String" resultType="com.jsrdxzw.vo.MySubOrdersItemVO">
        SELECT oi.item_id        as itemId,
               oi.buy_counts     as buyCounts,
               oi.price          as price,
               oi.item_img       as itemImg,
               oi.item_name      as itemName,
               oi.item_spec_id   as itemSpecId,
               oi.item_spec_name as itemSpecName
        FROM order_items oi
        WHERE oi.order_id = #{orderId}
    </select>

    <select id="queryMyOrders" parameterType="Map" resultMap="myOrdersVO">
        SELECT od.id as orderId,
        od.created_time as createdTime,
        od.pay_method as paymentMethod,
        od.real_pay_amount as realPayAmount,
        od.post_amount as postAmount,
        od.is_comment as isComment,
        os.order_status as orderStatus
        FROM orders od
        JOIN order_status os
        ON od.id = os.order_id
        WHERE od.user_id = #{paramsMap.userId}
        AND od.is_delete = 0
        <if test="paramsMap.orderStatus!=null">
            AND os.order_status = #{paramsMap.orderStatus}
        </if>
        ORDER BY od.updated_time
    </select>

    <select id="getMyOrderStatusCounts" parameterType="Map" resultType="int">
        SELECT count(*)
        FROM orders o
        JOIN order_status os ON o.id = os.order_id
        WHERE o.user_id = #{paramsMap.userId}
        AND os.order_status = #{paramsMap.orderStatus}
        <if test="paramsMap.isComment != null">
            AND o.is_comment = #{paramsMap.isComment}
        </if>
    </select>

    <select id="getMyOrderTrend" parameterType="Map" resultType="com.jsrdxzw.pojo.OrderStatus">
        SELECT os.order_id     as orderId,
               os.order_status as orderStatus,
               os.created_time as createdTime,
               os.pay_time     as payTime,
               os.deliver_time as deliverTime,
               os.success_time as successTime,
               os.close_time   as closeTime,
               os.comment_time as commentTime
        FROM orders o
                 JOIN order_status os on o.id = os.order_id
        WHERE o.is_delete = 0
          AND o.user_id = #{paramsMap.userId}
          AND os.order_status IN (20, 30, 40)
        ORDER BY os.order_id
            DESC
    </select>

</mapper>